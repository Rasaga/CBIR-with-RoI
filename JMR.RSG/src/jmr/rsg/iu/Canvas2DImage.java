/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jmr.rsg.iu;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

/**
 * Clase del lienzo enfocado a imagenes sobre el que además será posible pintar.
 * 
 * @author Ramón Sánchez García
 */
public class Canvas2DImage extends Canvas2D {
    
    private BufferedImage img;
    
    /**
     * Obtiene la imagen del lienzo actual
     * 
     * @return imagen del lienzo
     */
    public BufferedImage getImage(){
        return this.img;
    }
    
    /**
     * Añade una imagen al lienzo actual.
     * 
     * @param img imagen que se desea añadir
     */
    
    public void setImage(BufferedImage img) {
        this.img = img;
        if (img != null) {
            setPreferredSize(new Dimension(img.getWidth(), img.getHeight()));
            this.updateBorder(img.getWidth(),img.getHeight());
        } 
    }
    
    /**
     * Metodo que modifica el tamaño del borde a partir de una dimension
     * 
     * @param dimension que se tendrá en cuenta para la modificación del borde
     */
    
    public void resizeFrame(Dimension dimension){
        double heightD = dimension.getHeight();
        double widthD = dimension.getWidth();
        
        double heightF;
        double widthF;
        
        if(widthD<img.getWidth()){
            widthF = widthD;
        }else{
            widthF = img.getWidth();
        }
        
        if(heightD<img.getHeight()){
            heightF = heightD;
        }else{
            heightF = img.getHeight();
        }
        this.updateBorder((int)widthF-10,(int)heightF-10);
        
    }
    
    /**
     * Metodo que modifica el tamaño del borde a partir de un rectangulo
     * 
     * @param r El rectángulo que se usará para modificar el tamaño del borde del lienzo
     */
    
    public void resizeFrame(Rectangle r){
        Rectangle resultado = new Rectangle();
        resultado.x=0;
        resultado.y=0;
        
        double xN,yN,weightN,heightN;
        
        
        
        if(r.getWidth()>img.getWidth() && r.getHeight()>img.getHeight()){
            weightN = img.getWidth();
            heightN = img.getHeight();
        }else if(r.getWidth()>img.getWidth() && r.getHeight()<img.getHeight()){
            weightN = img.getWidth();
            heightN  = r.getHeight();
        }else if(r.getWidth()<img.getWidth() && r.getHeight()>img.getHeight()){
            weightN  = r.getWidth();
            heightN = img.getHeight();
        }else{
            weightN  = r.getWidth() - 20.0; // size of the scroll
            heightN  = r.getHeight() - 20.0; // size of the scroll
        }
        
        resultado.setFrame(r.x, r.y, weightN, heightN);
        this.updateBorder(resultado);
        
    }
    
    /**
     * Método que se encarga de pintar los componentes del lienzo de imágenes.
     * 
     * @param g parámetro graphics
     */
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        if(img!=null){
            g.drawImage(img,0,0,this);
        }
    }
    

    /** 
     * Constructor para crear un nuevo lienzo Canvas2DImage. 
     */
    public Canvas2DImage() {
        initComponents();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents




    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
